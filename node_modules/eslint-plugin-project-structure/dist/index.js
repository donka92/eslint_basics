"use strict";var y=Object.defineProperty;var Rr=Object.getOwnPropertyDescriptor;var hr=Object.getOwnPropertyNames;var xr=Object.prototype.hasOwnProperty;var yr=(r,e)=>{for(var t in e)y(r,t,{get:e[t],enumerable:!0})},wr=(r,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of hr(e))!xr.call(r,i)&&i!==t&&y(r,i,{get:()=>e[i],enumerable:!(o=Rr(e,i))||o.enumerable});return r};var Ir=r=>wr(y({},"__esModule",{value:!0}),r);var Nr={};yr(Nr,{rules:()=>Cr});module.exports=Ir(Nr);var x=require("path"),fr=require("@typescript-eslint/utils");var g=r=>!!r.type;var n=class extends Error{constructor(t){super(t);this.message=t,this.type="final"}};var S=r=>new n(`
\u{1F525} Invalid configuration file '${r}' \u{1F525}
`);var F=()=>new n(`

\u{1F525} Property "structure" is invalid. See documentation 'https://github.com/Igorkowalski94/eslint-plugin-project-structure#structure'. \u{1F525}

`);var C=r=>new n(`

\u{1F525} Property "ignorePatterns": ${JSON.stringify(r)} is invalid. See documentation 'https://github.com/Igorkowalski94/eslint-plugin-project-structure#ignore-patterns'. \u{1F525}

`);var N=(r,e)=>{if(!e)return!1;if(!Array.isArray(e)||Array.isArray(e)&&e.some(o=>!o||typeof o!="string"))throw C(e);let t=r.includes("\\")?r.replace(/\\/g,"/"):r;return e.some(o=>new RegExp(o).test(t))};var w=require("fs"),A=require("js-yaml"),$=r=>{let e;try{e=(0,A.load)((0,w.readFileSync)(r,"utf8")),e||(e=JSON.parse((0,w.readFileSync)(r,"utf-8")))}catch{return}return e};var j=r=>new n(`

\u{1F525} Rule: ${JSON.stringify(r)} is invalid. See documentation 'https://github.com/Igorkowalski94/eslint-plugin-project-structure#api'. \u{1F525}

`);var k=r=>new n(`

\u{1F525} Cannot use "children" together with "extension". rule: ${JSON.stringify(r)}. See documentation 'https://github.com/Igorkowalski94/eslint-plugin-project-structure#children'. \u{1F525}

`);var L=require("path");var b=r=>r.replace(/\.[a-z]+$/,"");var d=r=>!(r.includes("/")||r.includes("\\"));var T=r=>{let e=d(r),t=r.split(L.sep)[0];return{nodeName:e?b(r):t,fileNameWithExtension:e?t:void 0}};var f=r=>"ruleId"in r&&!!r.ruleId;var _=r=>new n(`

\u{1F525} "ruleId": "${r}" does not exist in object "rules", correct it in your '.projectStructurerc'. \u{1F525}

`);var M=r=>new n(`

\u{1F525} Property "ruleId": ${JSON.stringify(r)} is invalid. See documentation 'https://github.com/Igorkowalski94/eslint-plugin-project-structure#ruleid'. \u{1F525}

`);var B=()=>new n(`

\u{1F525} Property "rules" is invalid. See documentation 'https://github.com/Igorkowalski94/eslint-plugin-project-structure#rules'. \u{1F525}

`);var E=(r,{rules:e})=>{let{ruleId:t,...o}=r;if(t!==void 0&&typeof t!="string")throw M(t);if(!e||typeof e!="object"||Array.isArray(e))throw B();let i=e[t];if(i)return{...i,...o};throw _(t)};var R=(r,e)=>f(r)?E(r,e):r;var O=(r,e)=>r.map(t=>{if(!f(t))return t;let o=E(t,e);return o||t});var V=({pathname:r,rule:e,config:t})=>{let o=R(e,t),i=d(r),s=!!o.children,a=!!o.extension;return!!(!a&&!s||!i&&s||i&&a)};var z=r=>new n(`

\u{1F525} Property "children": ${JSON.stringify(r)} is invalid. See documentation 'https://github.com/Igorkowalski94/eslint-plugin-project-structure#children'. \u{1F525}

`);var W=require("path"),J=(r,e)=>r.replace(`${e}${W.sep}`,"");var G=r=>r.sort(({name:e},{name:t})=>e?.includes("/")&&!t?.includes("/")||!e&&!t?.includes("/")?1:-1);var D=require("path");var K=r=>!!r.message;var U=r=>r.includes(".");var c=r=>U(r)?"File":"Folder";var Z=({pathname:r,parentName:e,nodesList:t,config:o})=>{let i=r.split(D.sep)[0],s=c(i),a=`

 \u{1F525}\u{1F525}\u{1F525} ${s} '${i}' is invalid:

 It should `,u=0;t.length===0&&(s==="Folder"&&(a+="be a file."),s==="File"&&(a+="be a folder."));for(let l of t)try{h({pathname:r,parentName:e,rule:l,config:o});return}catch(m){if(g(m)&&m.type==="final")throw new n(m.message);K(m)&&!a.includes(m.ruleMessage)&&(u===0?a+=m.ruleMessage:a+=`
 or `+m.ruleMessage,u++)}throw new n(`${a} 

 \u{1F525}\u{1F525}\u{1F525}`)};var X=({pathname:r,nodeName:e,children:t,config:o})=>{if(!Array.isArray(t)||t.some(l=>!l||typeof l!="object"||Array.isArray(l)))throw z(t);let i=J(r,e),s=O(t,o),a=G(s),u=a.filter(l=>V({pathname:i,rule:l,config:o}));a.length&&Z({pathname:i,parentName:e,nodesList:u,config:o})};var p=class extends Error{constructor(t,o){super(t);this.message=t,this.ruleMessage=o}};var I=(r,e)=>new p(`File name '${r}' should end with '${e}'`,`end with '${e}'`);var q=r=>new n(`

\u{1F525} Property "extension": ${JSON.stringify(r)} is invalid. See documentation 'https://github.com/Igorkowalski94/eslint-plugin-project-structure#extension' \u{1F525}

`);var v="*";var H=(r,e)=>{if(e!==v){if(typeof e!="string"&&!Array.isArray(e)||Array.isArray(e)&&e.some(t=>!t||typeof t!="string"))throw q(e);if(typeof e=="string"){if(!r.endsWith(e))throw I(r,e);return}if(!e.includes(v)&&!e.some(t=>r.endsWith(t)))throw I(r,e)}};var Q=r=>new n(`

\u{1F525} Property "name": ${JSON.stringify(r)} is invalid. See documentation 'https://github.com/Igorkowalski94/eslint-plugin-project-structure#name'. \u{1F525}

`);var Y=r=>new n(`

\u{1F525} Regex: ${r} is invalid. \u{1F525}

`);var rr=(r,e)=>{let t=c(r);return new p(`${t} name '${r}' is invalid. it should be '${e}'`,`have name '${e}'`)};var er=r=>/^\/(.+)\/$/.test(r);var tr=r=>{try{new RegExp(r)}catch{return!0}return!1};var or=r=>r.charAt(0).toLowerCase()+r.slice(1);var ir=r=>r.charAt(0).toUpperCase()+r.slice(1);var vr=/((([a-z]|\d)+_)*([a-z]|\d)+)/,Pr=/((([a-z]|\d)+-)*([a-z]|\d)+)/,Sr=/((([A-Z]|\d){1}([a-z]|\d)*)*([A-Z]|\d){1}([a-z]|\d)*)/,Fr=/(([a-z]|\d)+(([A-Z]|\d){1}([a-z]|\d)*)*)/,nr=`${vr}`.replace(/\//g,""),P=`${Pr}`.replace(/\//g,""),sr=`${Sr}`.replace(/\//g,""),ar=`${Fr}`.replace(/\//g,"");var lr=(r,e={})=>({PascalCase:sr,camelCase:ar,snake_case:nr,"kebab-case":P,"dash-case":P,...e,ParentName:ir(r),parentName:or(r)});var mr=()=>new n(`

\u{1F525} Property "regexParameters" is invalid. See documentation 'https://github.com/Igorkowalski94/eslint-plugin-project-structure#regex-parameters'. \u{1F525}

`);var pr=({regex:r,parentName:e,regexParameters:t})=>{if(t!==void 0&&(typeof t!="object"||Array.isArray(t)))throw mr();let o=r,i=lr(e,t);return Object.keys(i).map(s=>o=o.replace(`\${{${s}}}`,i[s])),o};var ur=(r,e)=>{let t=c(r);return new p(`${t} name '${r}' is invalid. it should match ${e}`,`match name pattern ${e}`)};var cr=({nodeName:r,parentName:e,regex:t,regexParameters:o})=>{let i=t;i=pr({regex:i,parentName:e,regexParameters:o});let s=i.match(/^\/(.+)\/$/)[1];if(!new RegExp(s,"g").test(r))throw ur(r,t)};var gr=({nodeName:r,ruleName:e,parentName:t,regexParameters:o})=>{if(typeof e!="string")throw Q(e);if(tr(e))throw Y(e);if(er(e))return cr({nodeName:r,parentName:t,regex:e,regexParameters:o});if(e!==r)throw rr(r,e)};var h=({pathname:r,parentName:e,rule:t,config:o})=>{if(!t||typeof t!="object"||Array.isArray(t))throw j(t);let{nodeName:i,fileNameWithExtension:s}=T(r),a=R(t,o),{name:u,children:l,extension:m}=a;if(m&&l)throw k(a);u&&gr({nodeName:i,ruleName:u,parentName:e,regexParameters:o.regexParameters}),m&&s&&H(s,m),l&&X({pathname:r,nodeName:i,children:l,config:o})};var dr=(r,e)=>{if(!e)return;let t=$(r);if(!t||typeof t!="object"||Array.isArray(t))throw S(r);let{structure:o,ignorePatterns:i}=t;if(!o||typeof o!="object"||Array.isArray(o))throw F();N(e,i)||h({pathname:e,parentName:"structure",rule:o,config:t})};var Er=fr.ESLintUtils.RuleCreator(()=>"https://github.com/Igorkowalski94/eslint-plugin-project-structure#readme")({name:"project-structure",meta:{docs:{description:"Force project structure",recommended:"error",suggestion:!0},type:"suggestion",schema:[],messages:{error:"error"}},defaultOptions:[],create(r){return{Program(e){let t=`${r.getCwd?.()}${x.sep}${r.settings["project-structure/config-path"]}`,i=r.getPhysicalFilename?.()?.replace(`${r.getCwd?.()}${x.sep}`,`structure${x.sep}`);try{dr(t,i)}catch(s){if(!g(s))return;r.report({node:e,message:s.message})}}}}});var Cr={"file-structure":Er};0&&(module.exports={rules});
